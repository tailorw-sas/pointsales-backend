version: '3.8'
services:
  db:
    container_name: db
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
    ports:
      - "5431:5432"
    expose:
      - 5431
    networks:
      - microservices-net

  registry-service:
    build:
      context: ./registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  config-service:
    build:
      context: ./config
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    depends_on:
      - registry-service

  treatments-service:
    build:
      context: ./treatments
      dockerfile: Dockerfile
    ports:
      - "9906:9906"
    environment:
      RC_SERVER_CONFIG: host.docker.internal
      RC_ACTIVE_PROFILE: dev
      KAFKA_BOOTSTRAP_ADDRESS: host.docker.internal:29092
    networks:
      - microservices-net

  calendar-service:
    build:
      context: ./calendar
      dockerfile: Dockerfile
    ports:
      - "9908:9908"
    environment:
      RC_SERVER_CONFIG: host.docker.internal
      RC_ACTIVE_PROFILE: dev
      KAFKA_BOOTSTRAP_ADDRESS: host.docker.internal:29092
    networks:
      - microservices-net

  patients-service:
    build:
      context: ./patients
      dockerfile: Dockerfile
    ports:
      - "9909:9909"
    environment:
      RC_SERVER_CONFIG: host.docker.internal
      RC_ACTIVE_PROFILE: dev
      KAFKA_BOOTSTRAP_ADDRESS: host.docker.internal:29092
    networks:
      - microservices-net

  gateway-service:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      RC_SERVER_CONFIG: host.docker.internal
      RC_ACTIVE_PROFILE: dev
      KAFKA_BOOTSTRAP_ADDRESS: host.docker.internal:29092
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
