server.port=8097
server.servlet.context-path=/
# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=reactive
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth.chevere.ddns.net/realms/kysoft-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.chevere.ddns.net/realms/kysoft-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://auth.chevere.ddns.net/realms/kysoft-realm/protocol/openid-connect/token
spring.cloud.config.enabled=false
# Para usar SMTP
#spring.profiles.active=smtp
#
## Para usar Mailjet
#spring.profiles.active=mailjet

# Claves API de Mailjet
mailjet.apiKey=5e201d3be398ca0990e34f93859b719e
mailjet.apiSecret=acd278d87e5065fbdc50179b07363288

# Direcci\u00f3n de correo electr\u00f3nico y nombre desde donde se enviar\u00e1n los correos
mailjet.fromEmail=it@ublik.net
mailjet.fromName=KYNSOFT

#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.protocol=smtp
#spring.mail.username=registrocivilnoreply6@gmail.com
#spring.mail.password=xbmvpmmjvowqyhik
#
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.debug=true

KAFKA_BOOTSTRAP_ADDRESS=localhost:9092
KAFKA_GROUP_ID:group-id

eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.instance.preferIpAddress=true
#spring.cloud.gateway.discovery.locator.enabled=true

# JWT Configuration
jwt.auth.converter.resource-id=registro-civil
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=http://localhost:8080
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=3600

# Springdoc Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints Configuration
management.endpoints.web.exposure.include=openapi,swagger-ui

#S3 File
aws.accessKey= ${AWS_ACCESS_KEY:latimdream}
aws.secretKey=${AWS_ACCESS_SECRET:latimdream}
aws.bucketName=anima-files-uploads
aws.region =us-east-2
aws.cloudfront.domain=http://d3ksvzqyx4up5m.cloudfront.net/
spring.datasource.initialization-mode=always

#ESTA LA DEBES DE AGREGAR AL config-data
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Esta es la propiedad encargada de generar el esquema de BD.
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/notification
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=jdbc:postgresql://localhost:5432/notification
spring.read-datasource.username=postgres
spring.read-datasource.password=postgres
spring.read-datasource.minimum-idle=2
spring.read-datasource.maximum-pool-size=2
